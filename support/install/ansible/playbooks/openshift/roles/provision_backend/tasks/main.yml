---
- name: Make sure we go back to default project
  shell: "oc project default"

- name: Check if Fuse 7.1 image streams are available
  shell: "oc describe is fuse7-java-openshift -n openshift"
  register: imagestream_exists
  when: configure_only == 'false'
  ignore_errors: true

- name: Create image streams for Fuse 7.1
  shell: "oc create -f https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.fuse-711004/fis-image-streams.json -n openshift"
  when: configure_only == 'false' and imagestream_exists.failed
  register: create_fuse_is
  failed_when: create_fuse_is.stderr != '' and 'already exists' not in create_fuse_is.stderr

- name: Check if Fuse 7.1 template is available
  shell: "oc describe template s2i-fuse71-spring-boot-camel -n openshift"
  register: template_exists
  when: configure_only == 'false'
  ignore_errors: true

# Needed to change this to include CONTEXT_DIR
- name: Create template for Fuse 7.1
  shell: "oc create -f https://gist.githubusercontent.com/aidenkeating/cd0ddf858c875f441532c78653bbe513/raw/46b9c22d45ad096a083e089195f175e6ac538a7f/spring-boot-camel-template.json -n openshift"
  when: configure_only == 'false' and template_exists.failed
  register: create_fuse_template
  failed_when: create_fuse_template.stderr != '' and 'already exists' not in create_fuse_template.stderr

- name: Create Backend Database
  shell: "oc new-app -f https://raw.githubusercontent.com/openshift/origin/master/examples/db-templates/postgresql-ephemeral-template.json \
  --param=POSTGRESQL_USER=dbuser --param=POSTGRESQL_PASSWORD=password --param=POSTGRESQL_DATABASE=sampledb --param=POSTGRESQL_VERSION=latest -n {{ backend_project }}"
  when: configure_only == 'false'
  register: create_backend_db
  failed_when: create_backend_db.stderr != '' and 'already exists' not in create_backend_db.stderr

- name: Create Backend Location API service
  shell: "oc new-app s2i-fuse71-spring-boot-camel -p GIT_REPO=https://github.com/aidenkeating/dayinthelife-integration \
  -p CONTEXT_DIR=/projects/location-service -p APP_NAME=location-service -p GIT_REF=fix-location-detail-sql -n {{ backend_project }}"
  when: configure_only == 'false'
  register: create_backend_api
  failed_when: create_backend_api.stderr != '' and 'already exists' not in create_backend_api.stderr

- name: Create Backend Location Detail SOAP service
  shell: "oc new-app s2i-fuse71-spring-boot-camel -p GIT_REPO=https://github.com/aidenkeating/dayinthelife-integration \
  -p CONTEXT_DIR=/projects/location-soap -p APP_NAME=location-soap -p GIT_REF=fix-location-detail-sql -n {{ backend_project }}"
  when: configure_only == 'false'
  register: create_backend_soap
  failed_when: create_backend_soap.stderr != '' and 'already exists' not in create_backend_soap.stderr

- name: Create Backend Location Detail SOAP to REST service
  shell: "oc new-app s2i-fuse71-spring-boot-camel -p GIT_REPO=https://github.com/aidenkeating/dayinthelife-integration \
  -p CONTEXT_DIR=/projects/location-soap2rest -p APP_NAME=location-soap2rest -p GIT_REF=fix-location-detail-sql -n {{ backend_project }}"
  when: configure_only == 'false'
  register: create_backend_soap_to_rest
  failed_when: create_backend_soap_to_rest.stderr != '' and 'already exists' not in create_backend_soap_to_rest.stderr

# Needed to change this to not use a hardcoded SSL route
- name: Create Webpage application
  shell: "oc new-app https://github.com/jbossdemocentral/3scaleworkshop-wwwpage#secured --name www \
  --build-env API_BACKEND_URL=https://location-sso-staging.amp.{{ ocp_apps_domain }}/locations \
  --build-env SSO_URL=https://secure-sso-{{ sso_project }}.{{ ocp_apps_domain }} --build-env SSO_REALM=threescale \
  --build-env CLIENT_ID=www-secured -n {{ backend_project }}"
  when: configure_only == 'false'
  register: create_webpage_application
  failed_when: create_webpage_application.stderr != '' and 'already exists' not in create_webpage_application.stderr

- name: Create webapp route
  shell: "oc expose svc/www -n {{ backend_project }}"
  when: configure_only == 'false'
  register: create_webapp_route
  failed_when: create_webapp_route.stderr != '' and 'already exists' not in create_webapp_route.stderr
